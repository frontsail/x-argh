{
  "version": 3,
  "sources": ["../src/index.js"],
  "sourcesContent": ["export default function (Alpine) {\n  Alpine.directive('argh', (el, { value, modifiers, expression }, { effect, evaluateLater }) => {\n    if (!value) {\n      return\n    }\n\n    const propName = camelize(value)\n    const propObj = el._x_dataStack[0]\n    const { argObj, argName } = resolve(el._x_dataStack[1], expression)\n    const evaluator = argObj ? null : evaluateLater(expression)\n    const bind = argObj && modifiers.includes('bind')\n\n    let prevPropValue = propObj[propName]\n    let prevArgValue = undefined\n\n    effect(() => {\n      if (argObj) {\n        // One-way binding\n        if (argObj[argName] !== prevArgValue) {\n          propObj[propName] = argObj[argName]\n        }\n\n        // Two-way binding\n        if (bind && propObj[propName] !== prevPropValue) {\n          argObj[argName] = propObj[propName]\n        }\n\n        prevArgValue = argObj[argName]\n        prevPropValue = propObj[propName]\n      } else {\n        // The evaluator is used in case that the argument is not a property\n        // of the parent component data (one-way binding).\n        evaluator((argValue) => {\n          if (argValue !== prevArgValue) {\n            propObj[propName] = argValue\n            prevArgValue = argValue\n          }\n        })\n      }\n    })\n  })\n\n  function camelize(s) {\n    return s.replace(/-./g, (x) => x[1].toUpperCase())\n  }\n\n  function resolve(data, expression) {\n    let argObj = null\n    let argName = null\n\n    if (data && expression in data) {\n      argObj = data\n      argName = expression\n    } else if (data && expression.includes('.')) {\n      const dotNotation = expression.split('.')\n      const obj = dotNotation\n        .slice(0, -1)\n        .reduce((o, i) => (typeof o === 'object' ? o[i] : null), data)\n\n      if (obj) {\n        const name = dotNotation.slice(-1)\n\n        if (name in obj) {\n          argObj = obj\n          argName = name\n        }\n      }\n    }\n\n    return { argObj, argName }\n  }\n}\n"],
  "mappings": "MAAe,WAAU,EAAQ,CAC/B,EAAO,UAAU,OAAQ,CAAC,EAAI,CAAE,QAAO,YAAW,cAAc,CAAE,SAAQ,mBAAoB,CAC5F,GAAI,CAAC,EACH,OAGF,GAAM,GAAW,EAAS,GACpB,EAAU,EAAG,aAAa,GAC1B,CAAE,SAAQ,WAAY,EAAQ,EAAG,aAAa,GAAI,GAClD,EAAY,EAAS,KAAO,EAAc,GAC1C,EAAO,GAAU,EAAU,SAAS,QAEtC,EAAgB,EAAQ,GACxB,EAEJ,EAAO,IAAM,CACX,AAAI,EAEE,GAAO,KAAa,GACtB,GAAQ,GAAY,EAAO,IAIzB,GAAQ,EAAQ,KAAc,GAChC,GAAO,GAAW,EAAQ,IAG5B,EAAe,EAAO,GACtB,EAAgB,EAAQ,IAIxB,EAAU,AAAC,GAAa,CACtB,AAAI,IAAa,GACf,GAAQ,GAAY,EACpB,EAAe,SAOzB,WAAkB,EAAG,CACnB,MAAO,GAAE,QAAQ,MAAO,AAAC,GAAM,EAAE,GAAG,eAGtC,WAAiB,EAAM,EAAY,CACjC,GAAI,GAAS,KACT,EAAU,KAEd,GAAI,GAAQ,IAAc,GACxB,EAAS,EACT,EAAU,UACD,GAAQ,EAAW,SAAS,KAAM,CAC3C,GAAM,GAAc,EAAW,MAAM,KAC/B,EAAM,EACT,MAAM,EAAG,IACT,OAAO,CAAC,EAAG,IAAO,MAAO,IAAM,SAAW,EAAE,GAAK,KAAO,GAE3D,GAAI,EAAK,CACP,GAAM,GAAO,EAAY,MAAM,IAE/B,AAAI,IAAQ,IACV,GAAS,EACT,EAAU,IAKhB,MAAO,CAAE,SAAQ",
  "names": []
}
